package controller;

import java.io.IOException;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import service.ProductService;
import service.Service;

//HttpServlet 웹과 소통하기 위한 객체 targeted runtimes check되어있어야 함
public class ProductController extends HttpServlet {
	private static final long serialVersionUID = 1L;
	// 상품등록, 상품리스트, 상품상세, 상품수정, 상품삭제
	//컨트롤러 -> 서비스, 서비스 -> DAO, DAO -> DBconnection
	private Service svc;
    

	//생성자
    public ProductController() { 
    	svc = new ProductService();
    	//인터페이스의 구현체로 객체 생성
    	/* List<String> list = new ArrayList<>();
    	 * List도 인터페이스 ArrayList는 구현체
    	 * */
    }


    //체크해서 나온 애들
    // 주 작업 영역
	protected void service(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException {
		// get / post 모든 처리는 service에서 처리함.
		// post 방식으로 데이터 처리를 할 때 한글이 깨지는 것을 방지
		req.setCharacterEncoding("UTF-8");
		res.setCharacterEncoding("UTF-8");
		res.setContentType("text/html; charset=UTF-8");
		
		String uri=req.getRequestURI(); //요청 경로(원하는 서비스) 컨트롤러주소/요청서비스
		System.out.println(">>> uri : "+uri); //로그데이터 표식 >>> 내가 남긴 로그
		String context=req.getContextPath(); // 프로젝트 명
		System.out.println(">>> context : "+context);
		
		//객체를 보내야하는 목적지 주소
		String destPage="";
//		switch() {
//		
//		}
		
		//웹의 목적지 주소로 연결해주는 객체
		RequestDispatcher rdp=
	}


	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// get방식으로 오는 값을 체킹
		//response.getWriter().append("Served at: ").append(request.getContextPath());
		service(request, response);
	}


	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// post 방식으로 오는 값을 체킹
		//doGet(request, response); //get으로 보냄
		service(request, response);
	}

}
