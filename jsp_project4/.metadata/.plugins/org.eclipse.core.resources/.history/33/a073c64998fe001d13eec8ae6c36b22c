package controller;

import java.io.File;
import java.io.IOException;
import java.util.List;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.fileupload.FileItem;
import org.apache.commons.fileupload.disk.DiskFileItemFactory;
import org.apache.commons.fileupload.servlet.ServletFileUpload;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import domain.BoardVO;
import net.coobird.thumbnailator.Thumbnails;
import service.BoardService;
import service.BoardServieImpl;


@WebServlet("/brd/*")
public class BoardController extends HttpServlet {
	private static final long serialVersionUID = 1L;
	private static final Logger log= LoggerFactory.getLogger(BoardController.class);
	private RequestDispatcher rdp;
	private String destPage;
	private int isOk;
	private BoardService bsv;
	
	private String savePath;
	private final String UTF8="utf-8";
       

    public BoardController() {
    	bsv=new BoardServieImpl();
    }

	
	protected void service(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		request.setCharacterEncoding(UTF8);
		response.setCharacterEncoding(UTF8);
		response.setContentType(UTF8);
		
		String uri=request.getRequestURI();
		log.info(">>> uri : "+uri);
		String path=uri.substring(uri.lastIndexOf("/")+1);
		log.info(">>> path : "+path);
		
		switch(path) {
		case "register":
			destPage="/board/register.jsp";
			break;
		
		case "insert":
			try {
				savePath=getServletContext().getRealPath("/_fileUpload");
				log.info(">>> 파일 저장 경로 : "+savePath);
				File fileDir= new File(savePath);
				
				DiskFileItemFactory fileItemFactory = new DiskFileItemFactory();
				fileItemFactory.setRepository(fileDir);
				fileItemFactory.setSizeThreshold(2*1024*1024);
				
				BoardVO bvo= new BoardVO();
				ServletFileUpload fileUpload= new ServletFileUpload(fileItemFactory);
				
				List<FileItem> itemList= fileUpload.parseRequest(request);
				for(FileItem item : itemList) {
					switch(item.getFieldName()) {
					case "title":
						bvo.setTitle(item.getString(UTF8));
						break;
						
					case "writer":
						bvo.setWriter(item.getString(UTF8));
						break;
						
					case "content":
						bvo.setContent(item.getString(UTF8));
						break;
						
					case "image_file":
						if(item.getSize()>0) {
							String fileName=item.getName().substring(item.getName().lastIndexOf("/")+1);
							fileName=System.currentTimeMillis()+"_"+fileName;
							log.info(">>> fileName : "+fileName);
							File uploadFilePath= new File(fileDir+File.separator+fileName);
							log.info(">>> 실제 파일 경로 : "+uploadFilePath);
							
							try {
								item.write(uploadFilePath);
								bvo.setImage_file(fileName);
								
								Thumbnails.of(uploadFilePath).size(75, 75).toFile(new File(fileDir+File.separator+"th_"+fileName));
								isOk=bsv.register(bvo);
								log.info(">>> register "+(isOk>0 ? "success":"fail"));
								
							} catch (Exception e) {
								// TODO: handle exception
								log.info(">>> file writer on disk fail");
								e.printStackTrace();
							}
						}
						break;
					}
				}
				
			} catch (Exception e) {
				// TODO: handle exception
				e.printStackTrace();
			}
			break;
		}
		
		rdp=request.getRequestDispatcher(destPage);
		rdp.forward(request, response);
	}


	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		service(request, response);
	}


	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		service(request, response);
	}

}
